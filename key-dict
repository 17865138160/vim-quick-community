SimpleTCP.EVENT_CLOSED
SimpleTCP.EVENT_CONNECTED
SimpleTCP.EVENT_CONNECTING
SimpleTCP.EVENT_DATA
SimpleTCP.EVENT_FAILED
SimpleTCP.getTime()
SimpleTCP.new()
add(
addChild(
addContent(
addEventListener(
addEventListenerWithFixedPriority(
addImage(
addImageAsync(
addItem(
addNodeEventListener(
addPOSTValue(
addTo(
align(
applyImpulse(
assert(
audio
audio.loadFile(
audio.pauseAll()
audio.playBGM(
audio.playBGMSync(
audio.playEffect(
audio.playEffectSync(
audio.resumeAll()
audio.setBGMVolume(
audio.setEffectVolume(
audio.stopAll()
audio.stopBGM(
audio.stopEffect(
audio.unloadAllFile(
autorelease()
bit.arshift(
bit.band(
bit.bnot(
bit.bor(
bit.bswap(
bit.bxor(
bit.lshift(
bit.rol(
bit.ror(
bit.rshift(
bit.tobit(
bit.tohex(
cc.ACCELEROMETER_EVENT
cc.Animate:create(
cc.BezierBy:create(
cc.BezierTo:create(
cc.Blink:create(
cc.CallFunc:create(
cc.CallFuncN:create(
cc.Camera:createOrthographic(
cc.Camera:createPerspective(
cc.CameraFlag.DEFAULT
cc.CameraFlag.USER1
cc.CameraFlag.USER2
cc.CameraFlag.USER3
cc.CameraFlag.USER4
cc.CameraFlag.USER5
cc.CameraFlag.USER6
cc.CameraFlag.USER7
cc.CameraFlag.USER8
cc.CardinalRomBy:create(
cc.DelayTime:create(
cc.Director:getInstance()
cc.Director:getInstance():getTextureCache()
cc.EaseBackIn:create(
cc.EaseBackOut:create(
cc.EaseBackinOut:create(
cc.EaseBounce:create(
cc.EaseBounceIn:create(
cc.EaseBounceInOut:create(
cc.EaseBounceOut:create(
cc.EaseElastic:create(
cc.EaseElasticIn:create(
cc.EaseElasticInOut:create(
cc.EaseElasticOut:create(
cc.EaseExponentialIn:create(
cc.EaseExponentialInOut:create(
cc.EaseExponentialOut:create(
cc.EaseIn:create(
cc.EaseInOut:create(
cc.EaseOut:create(
cc.EaseRateAction:create(
cc.EaseSineIn:create(
cc.EaseSineInOut:create(
cc.EaseSineOut:create(
cc.EventListenerPhysicsContact:create()
cc.FadeIn:create(
cc.FadeOut:create(
cc.FadeTo:create(
cc.FileUtils:getInstance()
cc.FlipY:create(
cc.Follow:create(
cc.Handler.EVENT_PHYSICS_CONTACT_BEGIN
cc.Handler.EVENT_PHYSICS_CONTACT_POSTSOLVE
cc.Handler.EVENT_PHYSICS_CONTACT_PRESOLVE
cc.Handler.EVENT_PHYSICS_CONTACT_SEPERATE
cc.Hide:create()
cc.KEYPAD_EVENT
cc.LabelAtlas:_create(
cc.LayerColor:create(
cc.MoveBy:create(
cc.MoveTo:create(
cc.NODE_ENTER_FRAME_EVENT
cc.NODE_EVENT
cc.NODE_TOUCH_EVENT
cc.PHYSICSBODY_MATERIAL_DEFAULT
cc.PHYSICSSHAPE_MATERIAL_DEFAULT
cc.ParticleBatchNode:createWithTexture(
cc.ParticleExplosion:create()
cc.ParticleFire:create()
cc.ParticleFireworks:create()
cc.ParticleFlower:create()
cc.ParticleGalaxy:create()
cc.ParticleMeteor:create()
cc.ParticleRain:create()
cc.ParticleSmoke:create()
cc.ParticleSnow:create()
cc.ParticleSpiral:create()
cc.ParticleSun:create()
cc.ParticleSystemQuad:create(
cc.PhysicsBody
cc.PhysicsMaterial(
cc.PhysicsWorld.DEBUGDRAW_ALL
cc.Place:create(cc.p(
cc.PointSprite(
cc.ProgressFromTo:create(
cc.ProgressTo:create(
cc.Quad2(
cc.Quad3(
cc.RPerp(
cc.RemoveSelf:create()
cc.Repeat:create(
cc.RepeatForever:create(
cc.ReverseTime:create(
cc.RotateBy:create(
cc.RotateTo:create(
cc.ScaleBy:create(
cc.ScaleTo:create(
cc.Sequence:create(
cc.Show:create()
cc.SkewBy:create(
cc.SkewTo:create(
cc.Spawn:create(
cc.Speed:create(
cc.SpriteFrameCache:getInstance()
cc.T2F_Quad(
cc.TMXTiledMap:create(
cc.TOUCH_MODE_ALL_AT_ONCE
cc.TOUCH_MODE_ONE_BY_ONE
cc.TargetedAction:create(
cc.TintBy:create(
cc.TintTo:create(
cc.ToggleVisibility:create()
cc.UserDefault:getInstance()
cc.V2F_C4B_T2F(
cc.V2F_C4B_T2F_Quad(
cc.V2F_C4F_T2F(
cc.V2F_C4F_T2F_Quad(
cc.V3F_C4B_T2F(
cc.V3F_C4B_T2F_Quad(
cc.Vertex3F(
cc.WEBSOCKET_CLOSE
cc.WEBSOCKET_ERROR
cc.WEBSOCKET_MESSAGE
cc.WEBSOCKET_OPEN
cc.WebSocket:create(
cc.c3b(
cc.c4b(
cc.c4bFromc3b(
cc.c4bFromc4f(
cc.c4f(
cc.c4fFromc3b(
cc.c4fFromc4b(
cc.clampf(
cc.kCCNetworkStatusNotReachable
cc.kCCNetworkStatusReachableViaWAN
cc.kCCNetworkStatusReachableViaWiFi
cc.p(
cc.pAdd(
cc.pCross(
cc.pDistanceSQ(
cc.pDot(
cc.pForAngle(
cc.pFromSize(
cc.pFuzzyEqual(
cc.pGetAngle(
cc.pGetClampPoint(
cc.pGetDistance(
cc.pGetIntersectPoint(
cc.pGetLength(
cc.pIsLineIntersect(
cc.pIsSegmentIntersect(
cc.pLengthSQ(
cc.pLerp(
cc.pMidpoint(
cc.pMul(
cc.pNormalize(
cc.pPerp(
cc.pProject(
cc.pRotate(
cc.pRotateByAngle(
cc.pSub(
cc.pToAngleSelf(
cc.pUnrotate(
cc.rect(
cc.rectContainsPoint(
cc.rectEqualToRect(
cc.rectGetMaxX(
cc.rectGetMaxY(
cc.rectGetMidX(
cc.rectGetMidY(
cc.rectGetMinX(
cc.rectGetMinY(
cc.rectIntersection(
cc.rectIntersectsRect(
cc.rectUnion(
cc.size(
cc.tex2F(
cc.vec3(
cc.vertex2F(
center()
checkbool(
checkint(
checknumber(
checktable(
class(
clone()
close()
collectgarbage(
connect()
coroutine.create(
coroutine.resume(
coroutine.running(
coroutine.status(
coroutine.wrap(
coroutine.yield(
createBox(
createCircle(
createEdgeBox(
createView(
crypto.decodeBase64(
crypto.decryptAES256(
crypto.decryptXXTEA(
crypto.encodeBase64(
crypto.encryptAES256(
crypto.encryptXXTEA(
crypto.md5(
crypto.md5file(
debug.debug(
debug.gethook(
debug.getinfo(
debug.getlocal(
debug.getmetatable(
debug.getregistry(
debug.getupvalue(
debug.getuservalue(
debug.sethook(
debug.setlocal(
debug.setmetatable(
debug.setupvalue(
debug.setuservalue(
debug.traceback(
debug.upvalueid(
debug.upvaluejoin(
device.cancelAlert()
device.directorySeparator
device.getOpenUDID()
device.hideActivityIndicator()
device.language
device.model
device.openURL(
device.pathSeparator
device.platform
device.showActivityIndicator()
device.showAlert(
device.showInputBox(
device.writablePath
disconnect()
display
display.AUTO_SIZE
display.BOTTOM_CENTER
display.BOTTOM_LEFT
display.BOTTOM_RIGHT
display.BOTTOM_TO_TOP
display.CENTER
display.CENTER_BOTTOM
display.CENTER_LEFT
display.CENTER_RIGHT
display.CENTER_TOP
display.COLOR_BLACK
display.COLOR_BLUE
display.COLOR_GREEN
display.COLOR_RED
display.COLOR_WHITE
display.DEFAULT_TTF_FONT
display.DEFAULT_TTF_FONT_SIZE
display.FIXED_SIZE
display.LEFT_BOTTOM
display.LEFT_CENTER
display.LEFT_TOP
display.LEFT_TO_RIGHT
display.PROGRESS_TIMER_BAR
display.PROGRESS_TIMER_RADIAL
display.RIGHT_BOTTOM
display.RIGHT_CENTER
display.RIGHT_TOP
display.RIGHT_TO_LEFT
display.TOP_CENTER
display.TOP_LEFT
display.TOP_RIGHT
display.TOP_TO_BOTTOM
display.addImageAsync(
display.addSpriteFrames(
display.align(
display.bottom
display.c_bottom
display.c_left
display.c_right
display.c_top
display.captureScreen(
display.contentScaleFactor
display.cx
display.cy
display.getAnimationCache(
display.getRunningScene(
display.height
display.heightInPixels
display.left
display.newAnimation(
display.newBMFontLabel(
display.newBatchNode(
display.newCircle(
display.newClippingRectangleNode(
display.newColorLayer(
display.newDrawNode(
display.newFilteredSprite(
display.newFrames(
display.newGraySprite(
display.newLayer(
display.newLine(
display.newNode(
display.newPhysicsScene(
display.newPolygon(
display.newProgressTimer(
display.newRect(
display.newScale9Sprite(
display.newScene(
display.newSolidCircle(
display.newSprite(
display.newSpriteFrame(
display.newTTFLabel(
display.newTiledBatchNode(
display.newTilesSprite(
display.pause()
display.removeAnimationCache(
display.removeSpriteFrameByImageName(
display.removeSpriteFramesWithFile(
display.removeUnusedSpriteFrames()
display.replaceScene(
display.resume()
display.right
display.setAnimationCache(
display.setTexturePixelFormat(
display.size.height
display.size.width
display.sizeInPixels.height
display.sizeInPixels.width
display.top
display.width
display.widthInPixels
displayFrame(
dofile(
dump(
enterScene(
error(
fadeIn(
fadeOut(
fadeTo(
flipX(
flipY(
flush()
getAvailable()
getBoolForKey(
getBoundingBox()
getButtonAtIndex(
getBytes(
getCascadeBoundingBox()
getChildren()
getContentSize()
getDoubleForKey(
getEndian()
getErrorCode()
getErrorMessage()
getFloatForKey(
getId(
getIntegerForKey(
getItemSize()
getLayer(
getLen()
getObjectGroup(
getObjects(
getPack(
getParent()
getPhysicsBody()
getPhysicsWorld()
getPos()
getPositionX()
getPositionY()
getPositionZ()
getProperties(
getReferenceCount()
getResponseDataLength()
getResponseHeadersString()
getResponseStatusCode()
getResponseString()
getSpriteFrame(
getState(
getStringForKey(
getStringFromFile(
getTileAt(
getValueMapFromFile(
getVelocity()
getWinSize()
getWritablePath()
getmetatable(
handler(
hide(
ignoreAnchorPointForPosition(
import(
io.close(
io.exists(
io.filesize(
io.flush(
io.input(
io.lines(
io.open(
io.output(
io.pathinfo(
io.popen(
io.read(
io.readfile(
io.stderr
io.stdin
io.stdout
io.tmpfile(
io.type(
io.write(
io.writefile(
ipairs(
isButtonSelected()
isFinishedState(
isItemInViewRect(
isKeypadEnabled()
isReady(
isState(
isTouchCaptureEnabled()
isTouchEnabled()
isTouchSwallowEnabled()
isValidId(
isVisible()
iskindof(
isset(
json.decode(
json.encode(
load(
lookAt(
luaj.callStaticMethod(
luaoc.callStaticMethod(
math.abs(
math.acos(
math.angle2radian(
math.asin(
math.atan(
math.atan2(
math.ceil(
math.cos(
math.cosh(
math.deg(
math.exp(
math.floor(
math.fmod(
math.frexp(
math.huge
math.ldexp(
math.log(
math.max(
math.min(
math.modf(
math.newrandomseed(
math.pi
math.pow(
math.rad(
math.radian2angle(
math.random(
math.randomseed(
math.round(
math.sin(
math.sinh(
math.sqrt(
math.tan(
math.tanh(
moveBy(
moveTo(
network.createHTTPRequest(
network.getInternetConnectionStatus(
network.isHostNameReachable(
network.isInternetConnectionAvailable(
network.isLocalWiFiAvailable(
network.makeCookieString(
network.parseCookie(
network.uploadFile(
newItem()
next(
opacity(
os.clock(
os.date(
os.difftime(
os.execute(
os.exit(
os.getenv(
os.remove(
os.rename(
os.setlocale(
os.time(
os.tmpname(
package.config
package.cpath
package.loaded
package.loadlib(
package.path
package.preload
package.searchers
package.searchpath(
pairs(
pause()
pcall(
performWithDelay(
playAnimationForever(
playAnimationOnce(
playForever(
playOnce(
popScene()
pos(
print(
printError(
printInfo(
printLog(
printf(
pushScene(
rawPack(
rawUnPack(
rawequal(
rawget(
rawlen(
rawset(
registerScriptHandler(
release()
reload()
removeChild(
removeFromParent()
removeItem(
removeSelf()
removeSpriteFramesFromFile(
removeUnusedSpriteFrames()
removeUnusedTextures()
replaceScene(
require(
require(cc.PACKAGE_NAME .. ".crypto")
require(cc.PACKAGE_NAME .. ".json")
resume()
retain()
rotateBy(
rotateTo(
rotation(
runWithScene(
scale(
scaleBy(
scaleTo(
schedule(
scheduleUpdate()
scheduler.performWithDelayGlobal(
scheduler.scheduleGlobal(
scheduler.scheduleUpdateGlobal(
scheduler.unscheduleGlobal(
select(
send(
sendString(
setAnchorPoint(
setBoolForKey(
setBounceable(
setButtonEnabled(
setButtonLabel(
setButtonLabelString(
setButtonSelected(
setButtonSize(
setButtonsLayoutMargin(
setCameraFlag(
setCameraMask(
setCategoryBitmask(
setCollisionBitmask(
setConnFailTime(
setContactTestBitmask(
setContentScaleFactor(
setContentSize(
setDebugDrawMask(
setDirection(
setDoubleForKey(
setDynamic(
setEndian(
setFloatForKey(
setGlobalZOrder(
setGravity(
setInputFlag(
setIntegerForKey(
setItemSize(
setKeypadEnabled(
setLocalZOrder(
setName(
setPOSTData(
setPercent(
setPhysicsBody(
setPlaceHolder(
setPos(
setPosition(
setPosition3D(
setPositionX(
setPositionY(
setPositionZ(
setProperties(
setReconnTime(
setSpriteFrame(
setString(
setStringForKey(
setTag(
setTexture(
setTickTime(
setTouchEnabled(
setTouchMode(
setVisible(
setmetatable(
setupState(
show(
size(
skewBy(
skewTo(
start()
stop(
string.byte(
string.char(
string.dump(
string.find(
string.format(
string.formatnumberthousands(
string.gmatch(
string.gsub(
string.htmlspecialchars(
string.len(
string.lower(
string.ltrim(
string.match(
string.nl2br(
string.rep(
string.restorehtmlspecialchars(
string.reverse(
string.rtrim(
string.split(
string.sub(
string.text2html(
string.trim(
string.ucfirst(
string.upper(
string.urldecode(
string.urlencode(
string.utf8len(
table.concat(
table.filter(
table.indexof(
table.insert(
table.insertto(
table.keyof(
table.keys(
table.map(
table.merge(
table.nums(
table.pack(
table.remove(
table.removebyvalue(
table.sort(
table.unique(
table.unpack(
table.values(
table.walk(
tintBy(
tintTo(
tonumber(
tostring(
type(
unscheduleUpdate()
xpcall(
zorder(
